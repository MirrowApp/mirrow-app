---
import DocsLayout from "../../layouts/DocsLayout.astro";
import manifest from "../../data/docs-manifest.json";

const elements = manifest.elements ?? [];
const firstElement = elements[0];
---

<DocsLayout slug="overview">
  <h1 class="text-4xl font-black">Getting started with Mirrow</h1>
  <p>
    Mirrow is a command-line compiler that turns ergonomic <code>.mirrow</code> source
    into production-ready SVG. The reference on the left catalogues every element
    Mirrow understands, but you can experience the workflow in seconds with a single
    command.
  </p>
  <h2>One-command quickstart</h2>
  <p>
    Run Mirrow directly with <code>npx</code>, pointing it at your input file
    and the SVG you want it to produce:
  </p>
  <pre><code>npx mirrow -i file.mirrow -o file.svg</code></pre>
  <p>
    This downloads the latest CLI, compiles <code>file.mirrow</code>, and writes
    the output to <code>file.svg</code>. Swap in any paths you like. Mirrow will
    create the SVG if it does not exist, or overwrite it with fresh output.
  </p>
  <h2>Zero-to-output example</h2>
  <p>
    Want to see the full flow? Drop into a fresh directory and paste this
    snippet. It writes a sample <code>.mirrow</code> file, compiles it, and leaves the
    generated SVG beside it:
  </p>
  <pre><code>{String.raw`cat <<'EOF' > demo.mirrow
svg {
  box: (0, 0, 200, 200)

  circle {
    at: (100, 100)
    r: 40
    fill: "hotpink"

    animate {
      prop: "r"
      from: 40
      to: 60
      dur: 2s
      repeat: indefinite
    }
  }
}
EOF

npx mirrow -i demo.mirrow -o demo.svg
`}</code></pre>
  <p>
    Open <code>demo.svg</code> in any vector viewer to watch the animated circle, and
    rerun the command whenever you tweak <code>demo.mirrow</code>.
  </p>
  {
    firstElement ? (
      <section>
        <h2>Dive into the element index</h2>
        <p>
          Start with{" "}
          <a href={`/docs/${firstElement.slug}`}>
            <code>{firstElement.name}</code>
          </a>{" "}
          to explore the attributes Mirrow expands for each SVG element, then
          continue through the catalog using the navigation.
        </p>
      </section>
    ) : null
  }
</DocsLayout>
